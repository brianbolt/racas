% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/JSON_library.R
\name{updateOrCreateStateValue}
\alias{updateOrCreateStateValue}
\title{Update a value}
\usage{
updateOrCreateStateValue(entityKind, lsState, lsType, lsKind,
  stringValue = NULL, fileValue = NULL, urlValue = NULL,
  publicData = TRUE, ignored = FALSE, dateValue = NULL,
  clobValue = NULL, blobValue = NULL, valueOperator = NULL,
  operatorType = NULL, numericValue = NULL, sigFigs = NULL,
  uncertainty = NULL, uncertaintyType = NULL, numberOfReplicates = NULL,
  valueUnit = NULL, unitType = NULL, comments = NULL,
  lsTransaction = NULL, codeValue = NULL, recordedBy = "username",
  testMode = FALSE, recordedDate = as.numeric(format(Sys.time(), "\%s")) *
  1000, codeType = NULL, codeKind = NULL, codeOrigin = NULL,
  lsServerURL = racas::applicationSettings$client.service.persistence.fullpath)
}
\arguments{
\item{entityKind}{the kind of parent entity, such as "experiment" or "analysisgroup", see \link{acasEntityHierarchy}}

\item{lsState}{a state object}

\item{lsType}{type of the value}

\item{lsKind}{lsKind of the value}

\item{stringValue}{string, <255 characters}

\item{fileValue}{file code or path}

\item{urlValue}{url}

\item{publicData}{TRUE to be visible}

\item{ignored}{TRUE to mark as old}

\item{dateValue}{date in milliseconds}

\item{clobValue}{clob}

\item{blobValue}{blob}

\item{valueOperator}{">" or "<"}

\item{operatorType}{"comparison", not yet implemented}

\item{numericValue}{numeric}

\item{sigFigs}{integer}

\item{uncertainty}{numeric}

\item{uncertaintyType}{"standard deviation"}

\item{numberOfReplicates}{integer}

\item{valueUnit}{"uM", etc.}

\item{unitType}{not yet implemented}

\item{comments}{used by fileValue for a filename, flags for comments, etc.}

\item{lsTransaction}{id of the transaction}

\item{codeValue}{codename of something}

\item{recordedBy}{the current username}

\item{testMode}{used for testing}

\item{lsServerURL}{the url for the roo server}
}
\value{
a named list of the lsValue object
}
\description{
If a value with the correct lsType and lsKind exists within the provided lsState, it is updated, otherwise, it is created.
}
\details{
This will fail if the entity has more than one non-ignored state of entered stateKind,
as it would be unclear which to update. \code{\link{updateValueByTypeAndKind}} is often easier to use.
}

